/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rameses.rcp.draw.components;

import com.rameses.rcp.control.XComponentPanel;
import static com.rameses.rcp.draw.support.AttributeKeys.*;
import com.rameses.rcp.draw.utils.DataUtil;
import com.rameses.rcp.ui.annotations.ComponentBean;
import java.awt.Color;
import java.awt.event.AdjustmentEvent;
import java.awt.event.AdjustmentListener;



@ComponentBean("com.rameses.rcp.draw.components.FontPickerComponentModel")
public class FontPickerComponent extends XComponentPanel implements AdjustmentListener{

    protected AttributePickerModel model;
    protected com.rameses.rcp.common.ComponentBean bean;
    private String handler;
    
    /**
     * Creates new form FontPicker
     */
    public FontPickerComponent() {
        initComponents();
    }

    
    public String getHandler(){
        if (handler == null){
            System.out.println("handler must be specified in component.");
        }
        return handler;
    }
    
    public void setHandler(String handler){
        this.handler = handler;
    }
    
    @Override
    protected void initComponentBean(com.rameses.rcp.common.ComponentBean bean) {
        this.bean = bean;
        model = (AttributePickerModel) getProperty(getHandler());
        bean.setProperty("model", model);
        setupRotationBar();
        setupColorPanel();
        
    }    

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        xFormPanel1 = new com.rameses.rcp.control.XFormPanel();
        xComboBox1 = new com.rameses.rcp.control.XComboBox();
        jPanel2 = new javax.swing.JPanel();
        xFormPanel2 = new com.rameses.rcp.control.XFormPanel();
        xButton1 = new com.rameses.rcp.control.XButton();
        xButton2 = new com.rameses.rcp.control.XButton();
        xButton3 = new com.rameses.rcp.control.XButton();
        xComboBox2 = new com.rameses.rcp.control.XComboBox();
        jPanel1 = new javax.swing.JPanel();
        pnlColor = new javax.swing.JPanel();
        xButton4 = new com.rameses.rcp.control.XButton();
        rotationBar = new javax.swing.JScrollBar();

        setPreferredSize(new java.awt.Dimension(199, 185));
        setLayout(new java.awt.BorderLayout());

        xFormPanel1.setOrientation(com.rameses.rcp.constant.UIConstants.HORIZONTAL);

        xComboBox1.setImmediate(true);
        xComboBox1.setItems("fontFamilies");
        xComboBox1.setName("entity.family"); // NOI18N
        xComboBox1.setPreferredSize(new java.awt.Dimension(56, 24));
        xComboBox1.setShowCaption(false);
        xComboBox1.setStretchWidth(80);
        xFormPanel1.add(xComboBox1);

        add(xFormPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.BorderLayout());

        xFormPanel2.setOrientation(com.rameses.rcp.constant.UIConstants.HORIZONTAL);

        xButton1.setFocusable(false);
        xButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        xButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        xButton1.setName("bold"); // NOI18N
        xButton1.setShowCaption(false);
        xButton1.setStretchWidth(20);
        xButton1.setText("B");
        xButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        xFormPanel2.add(xButton1);

        xButton2.setFocusable(false);
        xButton2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        xButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        xButton2.setName("italic"); // NOI18N
        xButton2.setShowCaption(false);
        xButton2.setStretchWidth(20);
        xButton2.setText("I");
        xButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        xFormPanel2.add(xButton2);

        xButton3.setFocusable(false);
        xButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        xButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        xButton3.setName("underline"); // NOI18N
        xButton3.setShowCaption(false);
        xButton3.setStretchWidth(20);
        xButton3.setText("U");
        xButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        xFormPanel2.add(xButton3);

        xComboBox2.setImmediate(true);
        xComboBox2.setItems("fontSizes");
        xComboBox2.setName("entity.size"); // NOI18N
        xComboBox2.setPreferredSize(new java.awt.Dimension(56, 23));
        xComboBox2.setShowCaption(false);
        xComboBox2.setStretchWidth(25);
        xFormPanel2.add(xComboBox2);

        jPanel2.add(xFormPanel2, java.awt.BorderLayout.NORTH);

        jPanel1.setLayout(new java.awt.BorderLayout());

        pnlColor.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 5, 5));
        pnlColor.setPreferredSize(new java.awt.Dimension(117, 80));
        pnlColor.setLayout(new java.awt.GridLayout(3, 0));
        jPanel1.add(pnlColor, java.awt.BorderLayout.CENTER);

        xButton4.setMargin(new java.awt.Insets(5, 5, 5, 5));
        xButton4.setName("showColorChoosers"); // NOI18N
        xButton4.setText("More Font Colors...");
        jPanel1.add(xButton4, java.awt.BorderLayout.SOUTH);

        jPanel2.add(jPanel1, java.awt.BorderLayout.CENTER);

        rotationBar.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        rotationBar.setToolTipText("Rotation");
        rotationBar.setVisibleAmount(20);
        rotationBar.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 0, 5));
        rotationBar.setPreferredSize(new java.awt.Dimension(48, 20));
        jPanel2.add(rotationBar, java.awt.BorderLayout.SOUTH);

        add(jPanel2, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel pnlColor;
    private javax.swing.JScrollBar rotationBar;
    private com.rameses.rcp.control.XButton xButton1;
    private com.rameses.rcp.control.XButton xButton2;
    private com.rameses.rcp.control.XButton xButton3;
    private com.rameses.rcp.control.XButton xButton4;
    private com.rameses.rcp.control.XComboBox xComboBox1;
    private com.rameses.rcp.control.XComboBox xComboBox2;
    private com.rameses.rcp.control.XFormPanel xFormPanel1;
    private com.rameses.rcp.control.XFormPanel xFormPanel2;
    // End of variables declaration//GEN-END:variables

    private void setupRotationBar() {
        int visibleValue = 20;
        rotationBar.setMaximum(360 + visibleValue);
        
        Object r = bean.getProperty("rotation");
        if (r == null){
            rotationBar.setValue(0);
        }else{
            rotationBar.setValue(DataUtil.toInt(r, 0));
        }
        rotationBar.addAdjustmentListener(this);
    }

    @Override
    public void adjustmentValueChanged(AdjustmentEvent e) {
        double rotation = (double)e.getValue();
        model.getEditor().attributeChanged(ROTATION_ANGLE, rotation);
    }

    private void setupColorPanel() {
        pnlColor.add(new ColorButton(model, TEXT_COLOR, Color.BLACK));
        pnlColor.add(new ColorButton(model, TEXT_COLOR, Color.BLUE));
        pnlColor.add(new ColorButton(model, TEXT_COLOR, Color.CYAN));
        pnlColor.add(new ColorButton(model, TEXT_COLOR, Color.GRAY));
        pnlColor.add(new ColorButton(model, TEXT_COLOR, Color.GREEN));
        pnlColor.add(new ColorButton(model, TEXT_COLOR, Color.LIGHT_GRAY));
        pnlColor.add(new ColorButton(model, TEXT_COLOR, Color.MAGENTA));
        pnlColor.add(new ColorButton(model, TEXT_COLOR, Color.ORANGE));
        pnlColor.add(new ColorButton(model, TEXT_COLOR, Color.PINK));
        pnlColor.add(new ColorButton(model, TEXT_COLOR, Color.RED));
        pnlColor.add(new ColorButton(model, TEXT_COLOR, Color.WHITE));
        pnlColor.add(new ColorButton(model, TEXT_COLOR, Color.YELLOW));
    }
}



